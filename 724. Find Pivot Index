// ...................................................................................
// https://leetcode.com/problems/find-pivot-index/submissions/924036246/
// Runtime : 110 ms
// Memory : 45.8 MB
//........................................C#...........................................
public class Solution {
    public int PivotIndex(int[] nums) {
         int left_sum=0; int sum=0;
        for(int i =0;i<nums.Length;i++)
        {
            sum += nums[i];
        }

        for(int i =0; i<nums.Length;i++)
        {
            if(left_sum == sum - (nums[i] + left_sum))
            {
                return i;
            }
            left_sum += nums[i];

        }
        return -1;
        
    }
}
// .............................................................................
// https://leetcode.com/problems/find-pivot-index/submissions/924035698/
// Runtime : 1 ms
// Memory : 43.4 MB
//...................................JAVA.......................................
class Solution {
    public int pivotIndex(int[] nums) {
        int left_sum=0; int sum=0;
        for(int i =0;i<nums.length;i++)
        {
            sum += nums[i];
        }

        for(int i =0; i<nums.length;i++)
        {
            if(left_sum == sum - (nums[i] + left_sum))
            {
                return i;
            }
            left_sum += nums[i];

        }
        return -1;
    }
}
