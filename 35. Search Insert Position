// ....................................................................................
// https://leetcode.com/problems/search-insert-position/submissions/899152823/
// Runtime: 88 ms
// Memory Usage: 39.3 MB
// ....................................................................................

public class Solution {
    public int SearchInsert(int[] nums, int target) {

         int first = 0;
        int last = nums.Length - 1;
        int middle;

        while (first <= last)
        {
            middle = ( first + last) / 2;

            if (nums[middle] == target)
            {
                return middle;
            }

            else if (target > nums[middle])
            {
                first = middle + 1;
            }

            else if (target < nums[middle])
            {
                last = middle - 1;
            }
          
        }

        return first;
        
    }
}
