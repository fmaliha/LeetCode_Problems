// ................................................................................................
// https://leetcode.com/problems/running-sum-of-1d-array/submissions/911238803/ 
// Runtime : 0 ms
// Memory: 42.4
// ..............................................JAVA.............................................
class Solution {
    public int[] runningSum(int[] nums) {
        int[] runningsum = new int [nums.length];
        
        for(int i =0; i<nums.length;i++)
        {
          if(i == 0)
          {
              runningsum[i] = nums[i];
          }
          else
          {
              runningsum[i] = runningsum[i-1] + nums[i];
          }
        }
        return runningsum;
    }
}


// .............................................................................
// https://leetcode.com/problems/running-sum-of-1d-array/submissions/849428741/
// Runtime: 150 ms
// Memory: 42.9ms
// ......................................C#.......................................
public class Solution {
    public int[] RunningSum(int[] nums) {
        int[] runningSum = new int[nums.Length];
        for (int i = 0; i<nums.Length;i++)
        {
            if(i == 0)
            {
                runningSum[i] = nums[i];
            }

            else
            {
                runningSum[i] = runningSum[i-1] + nums[i]; 
            }

        }

        return runningSum;
    }
}
